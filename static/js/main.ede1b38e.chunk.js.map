{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","timer","useCountdownTimer","onExpire","setActions","actions","onReset","countdown","start","reset","pause","isRunning","React","logAction","message","action","onClick","map","index","ReactDOM","render","document","getElementById"],"mappings":"0KAGe,SAASA,IACtB,MAAgBC,mBAAS,KAAlBC,EAAP,oBACA,EAAsDC,YAAkB,CACtED,QACAE,SAAU,WACRC,GAAW,SAACC,GAAD,4BAAiBA,GAAjB,CAA0B,wBAEvCC,QAAS,WACPF,GAAW,SAACC,GAAD,4BAAiBA,GAAjB,CAA0B,yBANjCE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,MAAOC,EAAxC,EAAwCA,UASxC,EAA8BC,IAAMZ,SAAmB,IAAvD,mBAAOK,EAAP,KAAgBD,EAAhB,KAEMS,EAAY,SAACC,EAAiBC,GAClCX,GAAW,SAACC,GAAD,4BAAiBA,GAAjB,CAA0BS,OACrCC,KAGF,OACE,qCACE,8BAAMR,IACN,wBACES,QAAS,kBACPL,EAAYE,EAAU,QAASH,GAASG,EAAU,QAASL,IAF/D,SAKGG,EAAY,QAAU,UAEzB,wBAAQK,QAAS,kBAAMH,EAAU,QAASJ,IAA1C,mBAEA,8CACA,6BACGJ,EAAQY,KAAI,SAACF,EAAQG,GAAT,OACX,6BAAgCH,GAAhC,UAAYA,EAAZ,YAAsBG,YChChCC,IAASC,OAAO,cAACrB,EAAD,IAASsB,SAASC,eAAe,W","file":"static/js/main.ede1b38e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useCountdownTimer } from 'use-countdown-timer'\n\nexport default function App() {\n  const [timer] = useState(1000 * 5)\n  const { countdown, start, reset, pause, isRunning } = useCountdownTimer({\n    timer,\n    onExpire: () => {\n      setActions((actions) => [...actions, 'Expire Callback'])\n    },\n    onReset: () => {\n      setActions((actions) => [...actions, 'Reset Callback'])\n    },\n  })\n  const [actions, setActions] = React.useState<string[]>([])\n\n  const logAction = (message: string, action: () => void) => {\n    setActions((actions) => [...actions, message])\n    action()\n  }\n\n  return (\n    <>\n      <div>{countdown}</div>\n      <button\n        onClick={() =>\n          isRunning ? logAction('Pause', pause) : logAction('Start', start)\n        }\n      >\n        {isRunning ? 'Pause' : 'Start'}\n      </button>\n      <button onClick={() => logAction('Reset', reset)}>Reset</button>\n\n      <p>Actions Taken</p>\n      <ul>\n        {actions.map((action, index) => (\n          <li key={`${action}-${index}`}>{action}</li>\n        ))}\n      </ul>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}